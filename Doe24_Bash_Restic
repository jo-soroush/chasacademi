**** Restic create a new repo -- init

***** Preperations

Setup pass password store for storing the password that we will use for restic.

****** Init pass

#+begin_src bash
pass init jo.soroush81@gmail.com
#+end_src

****** setup gpg

#+begin_src bash
gpg --full-generate-key
#+end_src

****** Setup a new entry with pass that save the password for restic

#+begin_src bash
pass insert backup/restic
#+end_src

***** init

Set same password as for gnu pass.

#+begin_src bash
restic -r sftp://john@192.168.56.101/restic/restic_repo init
#+end_src

**** Create systemd timer:

 /usr/lib/systemd/system/


 ~/usr/lib/systemd/system/restic.timer

#+begin_src bash tangle: /usr/lib/systemd/system/restic.timer
[Unit]
Description=Run restic backup on startup after 5 minutes.

[Timer]
OnBootSec=5min

[Install]
WantedBy=timers.target
#+end_src

**** Service systemd setup

#+begin_src bash tangle: /usr/lib/systemd/system/restic.service
[Unit]
Description=restic backup service

[Service]
ExecStart=restic -r sftp://john@192.168.56.101/restic/restic_repo backup $HOME/Documents -p $(pass backup/restic)

[Install]
WantedBy=default.target
#+end_src


**** Start service systemd and systemd timer

#+begin_src bash
systemctl --user enable restic.service
systemctl --user enable restic.timer
systemctl --user start restic.service
systemctl --user start restic.timer
#+end_src

**** Confirm activation

Pass --all to see loaded but inactive timers, too

Confirm that the systemd timer is activated:

#+begin_src bash
systemctl list-timers --all
#+end_src


Confirm that the systemd service is activated:

#+begin_src bash
systemctl list-units --all
#+end_src
